{"ast":null,"code":"const DAYS_IN_WEEK = 7;\nconst WEEK_IN_MONTH = 6;\nexport const getMonthData = (year, month) => {\n  const result = [];\n  const date = new Date(year, month);\n  const monthStatsOn = date.getDay();\n  const daysInPrevMonth = new Date(year, month, 0).getDate();\n  let currentMonthDay = 1;\n  let prevMonthDay = 1;\n\n  for (let i = 0; i < WEEK_IN_MONTH; i++) {\n    result[i] = [];\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if (i === 0 && j < monthStatsOn) {\n        result[i][j] = new Date(year, month - 1, daysInPrevMonth - monthStatsOn + prevMonthDay++);\n      } else {\n        result[i][j] = new Date(year, month, currentMonthDay++);\n      }\n    }\n  }\n\n  return result;\n};\nexport const areDatesEqual = (a, b) => {\n  if (!a || !b) {\n    return false;\n  }\n\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n};","map":{"version":3,"sources":["/home/artem/mern/client/src/modules/Home/components/Calendar/utils.js"],"names":["DAYS_IN_WEEK","WEEK_IN_MONTH","getMonthData","year","month","result","date","Date","monthStatsOn","getDay","daysInPrevMonth","getDate","currentMonthDay","prevMonthDay","i","j","areDatesEqual","a","b","getFullYear","getMonth"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAArB;AACA,MAAMC,aAAa,GAAG,CAAtB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3C,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASJ,IAAT,EAAeC,KAAf,CAAb;AACA,QAAMI,YAAY,GAAGF,IAAI,CAACG,MAAL,EAArB;AACA,QAAMC,eAAe,GAAG,IAAIH,IAAJ,CAASJ,IAAT,EAAeC,KAAf,EAAsB,CAAtB,EAAyBO,OAAzB,EAAxB;AAEA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,YAAY,GAAG,CAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,aAApB,EAAmCa,CAAC,EAApC,EAAwC;AACtCT,IAAAA,MAAM,CAACS,CAAD,CAAN,GAAY,EAAZ;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,YAApB,EAAkCe,CAAC,EAAnC,EAAuC;AACrC,UAAID,CAAC,KAAK,CAAN,IAAWC,CAAC,GAAGP,YAAnB,EAAiC;AAC/BH,QAAAA,MAAM,CAACS,CAAD,CAAN,CAAUC,CAAV,IAAe,IAAIR,IAAJ,CAASJ,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0BM,eAAe,GAAGF,YAAlB,GAAiCK,YAAY,EAAvE,CAAf;AACD,OAFD,MAEO;AACLR,QAAAA,MAAM,CAACS,CAAD,CAAN,CAAUC,CAAV,IAAe,IAAIR,IAAJ,CAASJ,IAAT,EAAeC,KAAf,EAAsBQ,eAAe,EAArC,CAAf;AACD;AACF;AACF;;AAED,SAAOP,MAAP;AACD,CAtBM;AAwBP,OAAO,MAAMW,aAAa,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrC,MAAI,CAACD,CAAD,IAAM,CAACC,CAAX,EAAc;AACZ,WAAO,KAAP;AACD;;AAED,SAAOD,CAAC,CAACE,WAAF,OAAoBD,CAAC,CAACC,WAAF,EAApB,IAAuCF,CAAC,CAACG,QAAF,OAAiBF,CAAC,CAACE,QAAF,EAAxD,IAAwEH,CAAC,CAACN,OAAF,OAAgBO,CAAC,CAACP,OAAF,EAA/F;AACD,CANM","sourcesContent":["const DAYS_IN_WEEK = 7;\nconst WEEK_IN_MONTH = 6;\n\nexport const getMonthData = (year, month) => {\n  const result = [];\n  const date = new Date(year, month);\n  const monthStatsOn = date.getDay();\n  const daysInPrevMonth = new Date(year, month, 0).getDate();\n\n  let currentMonthDay = 1;\n  let prevMonthDay = 1;\n\n  for (let i = 0; i < WEEK_IN_MONTH; i++) {\n    result[i] = [];\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if (i === 0 && j < monthStatsOn) {\n        result[i][j] = new Date(year, month - 1, daysInPrevMonth - monthStatsOn + prevMonthDay++);\n      } else {\n        result[i][j] = new Date(year, month, currentMonthDay++);\n      }\n    }\n  }\n\n  return result;\n};\n\nexport const areDatesEqual = (a, b) => {\n  if (!a || !b) {\n    return false;\n  }\n\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n};\n"]},"metadata":{},"sourceType":"module"}
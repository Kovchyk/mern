{"ast":null,"code":"var _jsxFileName = \"/home/artem/mern/client/src/modules/Registration/RegistrationForm/Registration.form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = _ref => {\n  _s();\n\n  let {\n    onSubmit,\n    isLoading\n  } = _ref;\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    onSubmit(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: this.formRef,\n    form: form,\n    layout: \"vertical\",\n    initialValues: {\n      requiredMarkValue: true\n    },\n    requiredMark: true,\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Email\",\n      name: \"email\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid email!'\n      }, {\n        required: true,\n        message: 'Please input your email!'\n      }],\n      tooltip: \"This is a required field\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      tooltip: \"This is a required field\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Confirm password\",\n      name: \"confirm-password\",\n      dependencies: ['password'],\n      rules: [{\n        required: true,\n        message: 'Please input your password to confirm!'\n      }, _ref2 => {\n        let {\n          getFieldValue\n        } = _ref2;\n        return {\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('The two passwords that you entered do not match!'));\n          }\n\n        };\n      }],\n      tooltip: \"This is a required field\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        loading: isLoading,\n        htmlType: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/artem/mern/client/src/modules/Registration/RegistrationForm/Registration.form.jsx"],"names":["React","useRef","Form","Input","Button","RegistrationForm","onSubmit","isLoading","form","useForm","onFinish","values","formRef","requiredMarkValue","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\n\nimport { Form, Input, Button } from 'antd';\n\nconst RegistrationForm = ({ onSubmit, isLoading }) => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <Form\n      ref={this.formRef}\n      form={form}\n      layout='vertical'\n      initialValues={{\n        requiredMarkValue: true,\n      }}\n      requiredMark={true}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        label='Email'\n        name='email'\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid email!',\n          },\n          {\n            required: true,\n            message: 'Please input your email!',\n          },\n        ]}\n        tooltip='This is a required field'\n      >\n        <Input type='email' />\n      </Form.Item>\n      <Form.Item\n        label='Password'\n        name='password'\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        tooltip='This is a required field'\n      >\n        <Input type='password' />\n      </Form.Item>\n      <Form.Item\n        label='Confirm password'\n        name='confirm-password'\n        dependencies={['password']}\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password to confirm!',\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\n            },\n          }),\n        ]}\n        tooltip='This is a required field'\n      >\n        <Input type='password' />\n      </Form.Item>\n      <Form.Item name='submit'>\n        <Button type='primary' loading={isLoading} htmlType='submit'>\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default RegistrationForm;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/artem/mern/client/src/modules/Home/components/Calendar/components/Body.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCalendarContext } from '../useCalendarContext';\nimport * as utils from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const {\n    weekDayNames,\n    getYear,\n    getMonth,\n    selectedDate,\n    currentDate,\n    getSelectedDate\n  } = useCalendarContext();\n  const monthData = utils.getMonthData(getYear(), getMonth());\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: weekDayNames.map(name => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: monthData.map((week, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: week.map((date, index) => !!date ? /*#__PURE__*/_jsxDEV(\"td\", {\n          className: `day ${utils.areDatesEqual(new Date(), date) ? 'today' : ''} ${utils.areDatesEqual(selectedDate, date) ? 'selected' : ''} ${currentDate.getMonth() !== date.getMonth() ? 'shade' : ''}`,\n          onClick: () => getSelectedDate(date),\n          children: date.getDate()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"td\", {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Body, \"OQR9AZpkdgeCy84BHxbKydj376g=\", false, function () {\n  return [useCalendarContext];\n});\n\n_c = Body;\nexport { Body };\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/artem/mern/client/src/modules/Home/components/Calendar/components/Body.jsx"],"names":["React","useCalendarContext","utils","Body","weekDayNames","getYear","getMonth","selectedDate","currentDate","getSelectedDate","monthData","getMonthData","map","name","week","index","date","areDatesEqual","Date","getDate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA,WAAjD;AAA8DC,IAAAA;AAA9D,MAAkFR,kBAAkB,EAA1G;AACA,QAAMS,SAAS,GAAGR,KAAK,CAACS,YAAN,CAAmBN,OAAO,EAA1B,EAA8BC,QAAQ,EAAtC,CAAlB;AAEA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA,kBACGF,YAAY,CAACQ,GAAb,CAAiBC,IAAI,iBACpB;AAAA,oBAAgBA;AAAhB,WAASA,IAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBACGH,SAAS,CAACE,GAAV,CAAc,CAACE,IAAD,EAAOC,KAAP,kBACb;AAAA,kBACGD,IAAI,CAACF,GAAL,CAAS,CAACI,IAAD,EAAOD,KAAP,KACR,CAAC,CAACC,IAAF,gBACE;AAEE,UAAA,SAAS,EAAG,OAAMd,KAAK,CAACe,aAAN,CAAoB,IAAIC,IAAJ,EAApB,EAAgCF,IAAhC,IAAwC,OAAxC,GAAkD,EAAG,IACrEd,KAAK,CAACe,aAAN,CAAoBV,YAApB,EAAkCS,IAAlC,IAA0C,UAA1C,GAAuD,EACxD,IAAGR,WAAW,CAACF,QAAZ,OAA2BU,IAAI,CAACV,QAAL,EAA3B,GAA6C,OAA7C,GAAuD,EAAG,EAJhE;AAKE,UAAA,OAAO,EAAE,MAAMG,eAAe,CAACO,IAAD,CALhC;AAAA,oBAOGA,IAAI,CAACG,OAAL;AAPH,WACOJ,KADP;AAAA;AAAA;AAAA;AAAA,gBADF,gBAWE,kBAASA,KAAT;AAAA;AAAA;AAAA;AAAA,gBAZH;AADH,SAASA,KAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CApCD;;GAAMZ,I;UACoFF,kB;;;KADpFE,I;AAsCN,SAASA,IAAT","sourcesContent":["import React from 'react';\nimport { useCalendarContext } from '../useCalendarContext';\nimport * as utils from '../utils';\n\nconst Body = () => {\n  const { weekDayNames, getYear, getMonth, selectedDate, currentDate, getSelectedDate } = useCalendarContext();\n  const monthData = utils.getMonthData(getYear(), getMonth());\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {weekDayNames.map(name => (\n            <th key={name}>{name}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {monthData.map((week, index) => (\n          <tr key={index}>\n            {week.map((date, index) =>\n              !!date ? (\n                <td\n                  key={index}\n                  className={`day ${utils.areDatesEqual(new Date(), date) ? 'today' : ''} ${\n                    utils.areDatesEqual(selectedDate, date) ? 'selected' : ''\n                  } ${currentDate.getMonth() !== date.getMonth() ? 'shade' : ''}`}\n                  onClick={() => getSelectedDate(date)}\n                >\n                  {date.getDate()}\n                </td>\n              ) : (\n                <td key={index} />\n              ),\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport { Body };\n"]},"metadata":{},"sourceType":"module"}
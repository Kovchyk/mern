{"ast":null,"code":"var _jsxFileName = \"/home/artem/mern/client/src/modules/Home/components/Calendar/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { Controls, Body } from './components';\nimport { CalendarProvider } from './useCalendarContext';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weekDayNames = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\nconst monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst Calendar = props => {\n  _s();\n\n  const {\n    date,\n    dateSelected,\n    onChange,\n    children\n  } = props;\n  const [currentDate, setCurrentDate] = useState(date || new Date());\n  const [selectedDate, setSelectedDate] = useState(dateSelected || date || new Date());\n  const selectMonthRef = useRef(null);\n  const selectYearRef = useRef(null);\n\n  const getYear = () => {\n    return currentDate.getFullYear();\n  };\n\n  const getMonth = () => {\n    return currentDate.getMonth();\n  };\n\n  const handleSelectChange = () => {\n    const date = new Date(selectYearRef.current.value, selectMonthRef.current.value);\n    setCurrentDate(date);\n  };\n\n  const handlePreviousMonthClick = () => {\n    const date = new Date(getYear(), getMonth() - 1);\n    setCurrentDate(date);\n  };\n\n  const handleNextMonthClick = () => {\n    const date = new Date(getYear(), getMonth() + 1);\n    setCurrentDate(date);\n  };\n\n  const getSelectedDate = date => {\n    const newDate = new Date(date.getFullYear(), date.getMonth());\n    setCurrentDate(newDate);\n    setSelectedDate(date);\n    onChange(date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calendar\",\n    children: /*#__PURE__*/_jsxDEV(CalendarProvider, {\n      value: {\n        handlePreviousMonthClick,\n        handleSelectChange,\n        getMonth,\n        getYear,\n        selectMonthRef,\n        selectYearRef,\n        handleNextMonthClick,\n        weekDayNames,\n        selectedDate,\n        currentDate,\n        getSelectedDate,\n        monthNames\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"hndK2v7aR8Z8gxnL4LzatjhKqSI=\");\n\n_c = Calendar;\nCalendar.Controls = Controls;\nCalendar.Body = Body;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/artem/mern/client/src/modules/Home/components/Calendar/index.jsx"],"names":["React","useState","useRef","Controls","Body","CalendarProvider","weekDayNames","monthNames","Calendar","props","date","dateSelected","onChange","children","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","selectMonthRef","selectYearRef","getYear","getFullYear","getMonth","handleSelectChange","current","value","handlePreviousMonthClick","handleNextMonthClick","getSelectedDate","newDate"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Controls, Body } from './components';\nimport { CalendarProvider } from './useCalendarContext';\nimport './Calendar.css';\n\nconst weekDayNames = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst Calendar = props => {\n  const { date, dateSelected, onChange, children } = props;\n\n  const [currentDate, setCurrentDate] = useState(date || new Date());\n  const [selectedDate, setSelectedDate] = useState(dateSelected || date || new Date());\n  const selectMonthRef = useRef(null);\n  const selectYearRef = useRef(null);\n\n  const getYear = () => {\n    return currentDate.getFullYear();\n  };\n\n  const getMonth = () => {\n    return currentDate.getMonth();\n  };\n\n  const handleSelectChange = () => {\n    const date = new Date(selectYearRef.current.value, selectMonthRef.current.value);\n    setCurrentDate(date);\n  };\n\n  const handlePreviousMonthClick = () => {\n    const date = new Date(getYear(), getMonth() - 1);\n    setCurrentDate(date);\n  };\n\n  const handleNextMonthClick = () => {\n    const date = new Date(getYear(), getMonth() + 1);\n    setCurrentDate(date);\n  };\n\n  const getSelectedDate = date => {\n    const newDate = new Date(date.getFullYear(), date.getMonth());\n    setCurrentDate(newDate);\n    setSelectedDate(date);\n    onChange(date);\n  };\n\n  return (\n    <div id='calendar'>\n      <CalendarProvider\n        value={{\n          handlePreviousMonthClick,\n          handleSelectChange,\n          getMonth,\n          getYear,\n          selectMonthRef,\n          selectYearRef,\n          handleNextMonthClick,\n          weekDayNames,\n          selectedDate,\n          currentDate,\n          getSelectedDate,\n          monthNames,\n        }}\n      >\n        {children}\n      </CalendarProvider>\n    </div>\n  );\n};\n\nCalendar.Controls = Controls;\nCalendar.Body = Body;\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}